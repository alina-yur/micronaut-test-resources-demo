plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.4.1"
    id("io.micronaut.test-resources")
    id("io.micronaut.aot")
}

version = "0.1"
group = "demo"

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url "https://s01.oss.sonatype.org/content/repositories/snapshots/"
    }
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut:micronaut-runtime")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")

}


application {
    mainClass.set("demo.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

graalvmNative.toolchainDetection = false
micronaut {
    version = "3.5.0"
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("demo.*")
    }
    testResources {
        version = '1.0.0-SNAPSHOT'
//        sharedServer = true
    }
    aot {
        version.set("1.0.3")
        cacheEnvironment.set(true)
        optimizeServiceLoading.set(true)
        optimizeClassLoading.set(true)
        convertYamlToJava.set(true)
        precomputeOperations.set(true)
        deduceEnvironment.set(true)
        replaceLogbackXml.set(true)
    }
}

dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    runtimeOnly("mysql:mysql-connector-java")
//    runtimeOnly("org.postgresql:postgresql")
    aotPlugins("ch.qos.logback:logback-classic:1.3.0-alpha14")
    aotPlugins("org.fusesource.jansi:jansi:1.18")
}
